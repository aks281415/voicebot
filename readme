# Voice AI Chatbot

## Overview
The **Voice AI Chatbot** is a real-time interactive voice-based chatbot that uses **Faster-Whisper** for speech-to-text transcription and **OpenAI's GPT model** for generating conversational responses. The system tracks conversation history, allows for new conversations, and supports downloading chat history as a **JSON** file.

## Features
- **Real-time speech recognition** using **Faster-Whisper**.
- **Context-aware chatbot** that remembers the last 5 turns of conversation.
- **Support for multiple conversations** with session tracking.
- **Silence detection** to ignore background noise and process only relevant speech.
- **Streamlit-based UI** for seamless interaction.
- **Text-to-Speech (TTS)** will be implemented using Edge TTS.
- **Pygame** will be used to stream the audio generated by Edge TTS in real-time.



## Project Setup

### Prerequisites
Make sure you have Python 3.x installed on your system. You also need to have **Streamlit**, **PyAudio**, **Faster-Whisper**, and **OpenAI** libraries installed. 

### Installation

1. **Clone the repository**:
    ```bash
    git clone https://github.com/aks281415/voicebot.git
    cd VOICE-AI-CHATBOT
    ```

2. **Create and activate a virtual environment**:
    For Linux/MacOS:
    ```bash
    python3 -m venv .venv
    source .venv/bin/activate
    ```
    For Windows:
    ```bash
    python -m venv .venv
    .venv\Scripts\activate

    In case you are working on Linux , you need to 
    RUN apt-get update && apt-get install -y \
    build-essential \
    gcc \
    portaudio19-dev \
    libasound-dev \
    ffmpeg \
    python3-dev \
    && rm -rf /var/lib/apt/lists/*
    ```

3. **Install dependencies**:
    ```bash
    pip install -r requirements.txt
    ```

4. **Set up environment variables**:
    Add OpenAI API Key in `.env`.

### Running the Application

After setting up the virtual environment and installing dependencies, you can start the Streamlit application:

```bash
streamlit run main.py
